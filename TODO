TODO PixelController
--------------------
-WIP: palette/color concept (greyscale, rgb, hsv...), currently we're mixing b/w, rgb and hsv, plus there is a tint effect
-WIP: particle generator (rain,snow,fireworks...) remember: rip from cocos2d particle system
-rewrite output selection/configuration, 
-more effects/mixer...
-move message handling out to effective classes (MessageProcessor.java, still unsure if this is a good idea..)
-more layouts (what kind of layouts?)
-do not freeze application if output fails (disconnect controller)

Changelog v1.0.3 to v1.1
------------------------
-add notification if random mode is selected or not
-more threads! the output gets calculated on the fly, this means wait until the visuals are generated. 
 if they would run in seperate thread, that would be faster...
-decoupling visual generation from output update, should increase performance
-New Generators: ColorScroll, ColorFade and ScreenCapture. Removed Simple Colors
-PixelInvaders firmware: update initial image in firmware
-PixelInvaders firmware: add autonomous firmware mode, run simple animation if no computer is connected
-ScreenCapture: make capturing area visible to user
-create osc tabled gui for Control (OSC + MIDI) (http://charlie-roberts.com/Control)
-manual mapping to support fancy led mapping (OnePanelResolutionAwareOutput class). define a configuration property like 
 output.mapping=1,2,5,6,3,4,7,8 ...
-Log output to a file instead the command line
